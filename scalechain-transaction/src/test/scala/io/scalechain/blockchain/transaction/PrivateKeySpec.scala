package io.scalechain.blockchain.transaction

import org.scalatest._

class PrivateKeySpec extends FlatSpec with BeforeAndAfterEach with ShouldMatchers {
  this: Suite =>

  if (ChainEnvironmentFactory.getActive().isEmpty)
    ChainEnvironmentFactory.create("testnet")

  override def beforeEach() {
    // set-up code
    //

    super.beforeEach()
  }

  override def afterEach() {
    super.afterEach()
    // tear-down code
    //
  }

  "PrivateKey.from" should "create a private key from wallet import format generated by base58 method" in {
    // PrivateKey.generate and base58 method are tested here.

    val privateKey = PrivateKey.generate()
    val encodedPrivateKey = privateKey.base58()
    val decodedPrivateKey = PrivateKey.from(encodedPrivateKey)

    decodedPrivateKey shouldBe encodedPrivateKey
  }
}